♦ "Transfer to a bank account" ♦
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Программа реализована согласно ТЗ - как первый проект во время обучения. Из усложнений добавлен вывод данных файла-отчета за промежуток и суммы с плавающей точкой "double"

КАК РАБОТАЕТ
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
После запуска программы и отработки пункта 1 файл transfer.txt(их может быть несколько и с разными именами, но обязательно с расширением .txt) из папки src\files\inputPack переместиться в папку src\files\archivePack
Файл accounts.txt в папке src\files\accountsPack будет обновлен.
Файлы сделаны для отработки всех функций без нюансов и ошибок. После тестирования рекомендуется вернуть первоначальные данные для упрощения последующей демонстрации работы без различных сообщений от программы, исходящей из заложенных в неё проверок.
Для удобного возврата к первоначальным данным была создана папка Original_files_to_tests в корне проекта - она хранит первоначальные файлы для удобного отката в начало в случае активного тестирования.
Для возврата к начальным данным - переместите файл transfer.txt из папки archivePack в папку inputPack, а внутри файла accounts.txt замените данные на первоначальные из такого-же файла в папке Original_files_to_tests).


КРАТКОЕ ОПИСАНИЕ
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Папка files - содержит все необходимые для работы папки и файлы.
Папки fileController, operationAccount, service - классы.
В корне программы оставил: ТЗ на разработку, Диаграмму-классов и данный Readme-файл.

После запуска программа показывает панель управления.
1. Парсинг входных файлов с данными и выполнение переводов;   
2. Вывод всех данных файла-отчета;                            
3. Вывод всех данных файла-отчета за промежуток;              
4. Показать текущие данные счетов (Персональные данные!);     
5. Вывести список всех проверок, реализованных в программе;   
6. Выйти из программы.  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. Парсинг сначала проверяет файлы в папке inputPack на наличие файлов .txt, если находит другие расширения файлов - переносит их в папку spamPack.

Считывает входные файлы и файл, хранящий счета и суммы на них. Одновременно выполняются многочисленные проверки и защиты (наличие файлов, пустые ли они и т.д.).

Валидатор достает из документов конкретные строки и отсеивает(добавляет в игнор лист с последующим удалением) заведомо ложные и(или) ошибочные переводы, например убирает дубликаты
или смотрит существуют ли вообще такие счета, или если при переводе на счете-отправителе нет средств - такой счет добавляется в игнор лист ignoreList.

На этом этапе списки с переводами прошли валидацию - удаляем из списка transfersList счета, находящиеся в ignoreList и начисляем средства
- тут также присутствуют с многочисленные проверки на результат с защитой от отрицательного баланса. Тут же берем данные для файла-отчета.

Записываем в accounts.txt обновленные счета с суммами.

Добавляем записи в файл отчет outputLogger.txt.

Перемещаем входные файлы в папку archivePack.

Каждый шаг сопровождается различными проверками для избегания ошибок.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Простой метод чтения из файла с проверками и последующим выводом на консоль (проверки сложнее, чем реализация вывода на консоль).
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. Показывает панель выбора временного промежутка. Считываем данные по принципу из 2 пункта, но дополнительно выделяем из строки дату и с помощью метода isInTheRange()
проверяем входит ли строчка во временной диапазон, выбранный в панели управления, если нет считываем следующую, если входит - добавляем к списку-буферу на последующий вывод в консоль.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4. Простой метод чтения из файла с проверками и последующим выводом на консоль (проверки сложнее, чем реализация вывода на консоль).
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. Вывод на консоль списка основных реализованных в коде проверок для упрощения поиска их в коде.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6. Выход из программы.
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------